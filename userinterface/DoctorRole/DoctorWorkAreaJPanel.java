/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DoctorRole;

import userinterface.AdministrativeRole.AddPatientJPanel;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.DoctorOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.OrganReportDocToHos;

import Business.WorkQueue.OrganRequestDocToHos;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class DoctorWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private DoctorOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;

    /**
     * Creates new form DoctorWorkAreaJPanel
     */
    public DoctorWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, DoctorOrganization organization, Enterprise enterprise) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        valueLabel.setText(enterprise.getName());
        populateRequestTable();
    }

    public void populateRequestTable() {
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();
        DefaultTableModel model1 = (DefaultTableModel) OrganRequestJTable.getModel();
        DefaultTableModel model2 = (DefaultTableModel) OrganReportjTable.getModel();

        model.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()) {

            Object[] row = new Object[4];
            row[0] = request;
            row[1] = request.getReceiver();
            row[2] = request.getStatus();

            String result = ((LabTestWorkRequest) request).getTestResult();

            row[3] = result == null ? "Waiting" : result;

            model.addRow(row);
        }

        model1.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkQueue().getOrganRequestList()) {
            Object[] row = new Object[4];
            row[0] = request;
            row[1] = request.getReceiver();
            row[2] = request.getStatus();
            String result = ((OrganRequestDocToHos) request).getResult();
            row[3] = result == null ? "Waiting" : result;

            model1.addRow(row);
        }

        model2.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkQueue().getOrganReportList()) {
            OrganReportDocToHos re = (OrganReportDocToHos) request;
            Object[] row = new Object[2];
            row[0] = re;
            row[1] = request.getStatus();

            model2.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        OrganReportjTable = new javax.swing.JTable();
        report = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        OrganRequestJTable = new javax.swing.JTable();
        refreshTestJButton = new javax.swing.JButton();
        requestTestJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        requestOrganJButton = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        deleteLab = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(242, 240, 242));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 640));

        jPanel5.setBackground(new java.awt.Color(242, 240, 242));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        jLabel2.setText("My Work Area ");
        jPanel5.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 70, -1, -1));

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel5.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 40, 1080));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel5.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 0, 1040, 30));

        jLabel3.setText("Doctor Role - ");
        jPanel5.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 100, 90, 20));

        valueLabel.setBackground(new java.awt.Color(204, 204, 204));
        valueLabel.setText("<value>");
        jPanel5.add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 100, 60, 20));

        jPanel4.setBackground(new java.awt.Color(7, 79, 80));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        OrganReportjTable.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        OrganReportjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Organ Name", "Status"
            }
        ));
        jScrollPane3.setViewportView(OrganReportjTable);

        jPanel4.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 400, 930, 150));

        report.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        report.setText("Report avaliable Organ");
        report.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportActionPerformed(evt);
            }
        });
        jPanel4.add(report, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 550, -1, -1));

        OrganRequestJTable.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        OrganRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Message", "Receiver", "Status", "Result"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(OrganRequestJTable);

        jPanel4.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 210, 930, 150));

        refreshTestJButton.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        refreshTestJButton.setText("Refresh");
        refreshTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTestJButtonActionPerformed(evt);
            }
        });
        jPanel4.add(refreshTestJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 170, 110, -1));

        requestTestJButton.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        requestTestJButton.setText("Request Test");
        requestTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestTestJButtonActionPerformed(evt);
            }
        });
        jPanel4.add(requestTestJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 170, 110, -1));

        workRequestJTable.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Message", "Receiver", "Status", "Result"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        jPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, 930, 150));

        requestOrganJButton.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        requestOrganJButton.setText("Request Organ");
        requestOrganJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestOrganJButtonActionPerformed(evt);
            }
        });
        jPanel4.add(requestOrganJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 360, 180, -1));

        jProgressBar1.setBackground(new java.awt.Color(255, 255, 255));
        jProgressBar1.setBorder(null);
        jPanel4.add(jProgressBar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 360, 140, 30));

        jButton1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jButton1.setText("check progress");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 360, -1, -1));

        jButton2.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jButton2.setText("Details");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 360, -1, -1));

        jButton3.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jButton3.setText("delete Organ Request");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 360, -1, -1));

        deleteLab.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        deleteLab.setText(" delete Lab Request");
        deleteLab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteLabActionPerformed(evt);
            }
        });
        jPanel4.add(deleteLab, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 170, 180, -1));

        jButton5.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jButton5.setText("delete Organ Report");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 550, 180, -1));

        jPanel5.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 1040, 940));

        jPanel6.setBackground(new java.awt.Color(36, 24, 59));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel5.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 40, 1080));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icons8-medical_doctor.png"))); // NOI18N
        jPanel5.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, 90, 80));

        add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1080, 1080));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        ImageIcon icon1 = new ImageIcon("timeline.jpg");
        JOptionPane.showMessageDialog(null, icon1, "timeline", JOptionPane.PLAIN_MESSAGE);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void requestOrganJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestOrganJButtonActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("RequestOrganJPanel", new RequestOrganJPanel(userProcessContainer, userAccount, enterprise));
        layout.next(userProcessContainer);
    }//GEN-LAST:event_requestOrganJButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = OrganRequestJTable.getSelectedRow();

        if (selectedRow < 0) {
            return;
        }

        WorkRequest request = (WorkRequest) OrganRequestJTable.getValueAt(selectedRow, 0);
        System.out.println("statu2" + request.getStatus());

        if (request.getStatus().toString().equals("Sent to Hospital Admin")) {
            int value = 0;
            jProgressBar1.setValue(value);
            jProgressBar1.setString("0%");
            jProgressBar1.setStringPainted(true);

        }

        if (request.getStatus().toString().equals("HospitalPending")) {

            int va = 10;
            jProgressBar1.setValue(va);

            jProgressBar1.setStringPainted(true);
            jProgressBar1.setBackground(Color.blue);

            jProgressBar1.setForeground(Color.blue);
            jProgressBar1.setString("10%");

        }

        if (request.getStatus().toString().equals("Sent to UNOS")) {

            int val = 25;
            jProgressBar1.setValue(val);
            jProgressBar1.setString("25%");
            jProgressBar1.setStringPainted(true);
            jProgressBar1.setBackground(Color.CYAN);
        }

        if (request.getStatus().toString().equals("Pending")) {

            int val = 50;
            jProgressBar1.setValue(val);
            jProgressBar1.setString("50%");
            jProgressBar1.setStringPainted(true);
            jProgressBar1.setBackground(Color.MAGENTA);
        }

        if (request.getStatus().toString().equals("UNOS Processing")) {

            int val = 60;
            jProgressBar1.setValue(val);
            jProgressBar1.setString("60%");
            jProgressBar1.setStringPainted(true);
            jProgressBar1.setBackground(Color.YELLOW);
        }
        if (request.getStatus().toString().equals("sent to airambulence")) {

            int val = 60;
            jProgressBar1.setValue(val);
            jProgressBar1.setString("60%");
            jProgressBar1.setStringPainted(true);
            jProgressBar1.setBackground(Color.YELLOW);

        }

        if (request.getStatus().toString().equals("AirAmbulence Processing")) {

            int val = 70;
            jProgressBar1.setValue(val);
            jProgressBar1.setString("70%");
            jProgressBar1.setStringPainted(true);
            jProgressBar1.setBackground(Color.PINK);
        }

        if (request.getStatus().toString().equals("PICK UP")) {
            int val = 80;
            jProgressBar1.setValue(val);
            jProgressBar1.setString("80%");
            jProgressBar1.setStringPainted(true);
            jProgressBar1.setBackground(Color.ORANGE);
        }

        if (request.getStatus().toString().equals("DELIVERING")) {

            int val = 90;
            jProgressBar1.setValue(val);
            jProgressBar1.setString("90%");
            jProgressBar1.setStringPainted(true);
            jProgressBar1.setBackground(Color.DARK_GRAY);
        }

        if (request.getStatus().toString().equals("finished")) {
            int va = 100;
            jProgressBar1.setValue(va);
            jProgressBar1.setString("100%");
            jProgressBar1.setStringPainted(true);
            jProgressBar1.setBackground(Color.green);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void reportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("ReportOrganJPanel", new ReportOrganJPanel(userProcessContainer, userAccount, enterprise));
        layout.next(userProcessContainer);
    }//GEN-LAST:event_reportActionPerformed

    private void deleteLabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteLabActionPerformed
        // TODO add your handling code here:

        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0) {
            return;
        }
        WorkRequest request = (WorkRequest) workRequestJTable.getValueAt(selectedRow, 0);

        organization.getWorkQueue().removeLabRequest(request);
        userAccount.getWorkQueue().removeLabRequest(request);

        populateRequestTable();

    }//GEN-LAST:event_deleteLabActionPerformed

    private void requestTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestTestJButtonActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("RequestLabTestJPanel", new RequestLabTestJPanel(userProcessContainer, userAccount, enterprise));
        layout.next(userProcessContainer);
    }//GEN-LAST:event_requestTestJButtonActionPerformed

    private void refreshTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTestJButtonActionPerformed
        // TODO add your handling code here:
        populateRequestTable();
    }//GEN-LAST:event_refreshTestJButtonActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int selectedRow = OrganRequestJTable.getSelectedRow();

        if (selectedRow < 0) {
            return;
        }
        WorkRequest request = (WorkRequest) OrganRequestJTable.getValueAt(selectedRow, 0);

        organization.getWorkQueue().removeOrganRequest(request);
        userAccount.getWorkQueue().removeOrganRequest(request);

        populateRequestTable();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        int selectedRow = OrganReportjTable.getSelectedRow();

        if (selectedRow < 0) {
            return;
        }
        WorkRequest request = (WorkRequest) OrganReportjTable.getValueAt(selectedRow, 0);

        organization.getWorkQueue().removeOrganReport(request);
        userAccount.getWorkQueue().removeOrganReport(request);

        populateRequestTable();
    }//GEN-LAST:event_jButton5ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable OrganReportjTable;
    private javax.swing.JTable OrganRequestJTable;
    private javax.swing.JButton deleteLab;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton refreshTestJButton;
    private javax.swing.JButton report;
    private javax.swing.JButton requestOrganJButton;
    private javax.swing.JButton requestTestJButton;
    private javax.swing.JLabel valueLabel;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
